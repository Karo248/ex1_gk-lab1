<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Canvas Drawing</title>
    <style>
        canvas {
            border: 1px solid black;
        }
    </style>
</head>
<body onload="init()">
    <canvas id="canvas" width="400" height="400"></canvas>

    <script>
        "use strict";

        var canvas;    
        var graphics;  

        function draw() {
            graphics.clearRect(0, 0, 400, 400);

            
            graphics.save();
            graphics.translate(200, 200);
            graphics.rotate(-Math.PI / 2);

            
            graphics.fillStyle = 'rgb(255, 100, 100)'
            graphics.fillOval(0, 0, 100, 150); 

            graphics.strokeStyle = 'black';
            graphics.lineWidth = 2;
            graphics.strokeOval(0, 0, 100, 150);
            graphics.restore();

            
            graphics.strokeStyle = 'black';
            graphics.lineWidth = 2;
            graphics.beginPath();
            graphics.arc(200, 200, 50, 0.2 * Math.PI, 0.8 * Math.PI);
            graphics.stroke();

            
            graphics.fillStyle = 'white';
            graphics.fillCircle(170, 180, 10);
            graphics.fillStyle = 'black';
            graphics.fillCircle(170, 180, 4);

            
            graphics.fillStyle = 'white';
            graphics.fillCircle(230, 180, 10);
            graphics.fillStyle = 'black';
            graphics.fillCircle(230, 180, 4);
        }

        function addGraphicsContextExtras(graphics) {
            graphics.fillOval = function (x, y, rx, ry) {
                this.beginPath();
                this.save();
                this.translate(x, y);
                this.scale(rx, ry);
                this.arc(0, 0, 1, 0, 2 * Math.PI, false);
                this.restore();
                this.fill();
            }

            graphics.strokeOval = function (x, y, rx, ry) {
                this.beginPath();
                this.save();
                this.translate(x, y);
                this.scale(rx, ry);
                this.arc(0, 0, 1, 0, 2 * Math.PI, false);
                this.restore();
                this.stroke();
            }

            graphics.fillCircle = function (x, y, r) {
                this.beginPath();
                this.arc(x, y, r, 0, 2 * Math.PI, false);
                this.fill();
            }
        }

        function init() {
            try {
                canvas = document.getElementById("canvas");
                graphics = canvas.getContext("2d");
            } catch (e) {
                document.getElementById("canvas").innerHTML =
                    "Canvas graphics is not supported.<br>" +
                    "An error occurred while initializing graphics.";
            }
            addGraphicsContextExtras(graphics);
            draw();  
        }
    </script>
</body>
</html>
